services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.15-community
    container_name: codegraph-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # Neo4j Browser
      - "7687:7687"  # Neo4j Bolt
    environment:
      # Use values from .env file
      - NEO4J_AUTH=${NEO4J_USERNAME:-neo4j}/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_conf:/conf
      - neo4j_plugins:/plugins
    networks:
      - codegraph-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u ${NEO4J_USERNAME:-neo4j} -p ${NEO4J_PASSWORD:-password} 'RETURN 1;'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # CodeGraph Application
  codegraph:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: codegraph-app
    restart: unless-stopped
    ports:
      - "8501:8501"  # Streamlit UI
    env_file:
      - ../.env  # Load environment variables from .env file
    environment:
      # Override Neo4j URI to use container network
      - NEO4J_URI=neo4j://neo4j:7687
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - codegraph-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Named volumes for data persistence
volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_conf:
    driver: local
  neo4j_plugins:
    driver: local

# Custom network for service communication
networks:
  codegraph-network:
    driver: bridge 